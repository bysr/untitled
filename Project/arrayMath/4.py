# 随机函数 random
import numpy as np
import numpy.random as random

# 设置随机数种子
random.seed(42)
# 产生一个1x3，[0,1)之间的浮点型随机数
# array([[ 0.37454012,  0.95071431,  0.73199394]])
# 后面的例子就不在注释中给出具体结果了
random.rand(1, 3)
# 产生一个[0,1)之间的浮点型随机数
random.random()  # 0.5986584841970366
random.random((3, 3))
'''[[ 0.15601864  0.15599452  0.05808361]
 [ 0.86617615  0.60111501  0.70807258]
 [ 0.02058449  0.96990985  0.83244264]]'''
random.sample((3, 3))
'''[[ 0.21233911  0.18182497  0.18340451]
 [ 0.30424224  0.52475643  0.43194502]
 [ 0.29122914  0.61185289  0.13949386]]'''
x = random.random_sample((3, 3))
'''[[ 0.29214465  0.36636184  0.45606998]
 [ 0.78517596  0.19967378  0.51423444]
 [ 0.59241457  0.04645041  0.60754485]]'''
x = random.ranf((3, 3))
'''[[ 0.17052412  0.06505159  0.94888554]
 [ 0.96563203  0.80839735  0.30461377]
 [ 0.09767211  0.68423303  0.44015249]]'''

# 产生10个[1,6)之间的浮点型随机数

x = 5 * random.random(10) + 1
x = random.uniform(1, 6, 10)

# 产生10个[1,6)之间的整型随机数
random.randint(1, 6, 10)
# 产生2x5的标准正态分布样本
'''[[-0.84341992 -0.51332541]
 [-0.0435368  -0.27530091]
 [-1.56306679 -0.79563099]
 [ 0.9305844   0.67776741]
 [ 0.69844026  0.17360206]]'''
x = random.normal(size=(5, 2))

# 产生5个，n=5，p=0.5的二项分布样本
x = random.binomial(n=5, p=0.5, size=5)
print(x)
a = np.arange(10)
print(a)
# 从a中有回放的随机采样7个
x = random.choice(a, 7)
print(x)
# 从a中无回放的随机采样7个
x = random.choice(a, 7, replace=False)
print(x)
# 对a进行乱序并返回一个新的array
b = random.permutation(a)
print(b)

# 对a进行in-place乱序
print('start', a)
random.shuffle(a)
print('end', a)
# 生成一个长度为9的随机bytes序列并作为str返回
# '\x96\x9d\xd1?\xe6\x18\xbb\x9a\xec'
x = random.bytes(9)
print(x)
